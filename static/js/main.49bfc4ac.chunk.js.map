{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","email","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","Testimonials","testimonials","ContactUs","linkedinId","Footer","imagebaseurl","skypeid","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49bfc4ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n      \r\n      <header id=\"home\">\r\n         <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n            </ul>\r\n         </nav>\r\n\r\n         <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\r\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am an {resumeData.role}.{resumeData.roleDescription}\r\n               </h3>\r\n               <hr/>\r\n               <ul className=\"social\">\r\n                  {\r\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\r\n                      return(\r\n                              <li key={item.name}>\r\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\r\n                              </li>\r\n                            )\r\n                          }\r\n                    )\r\n                  }\r\n               </ul>\r\n            </div>\r\n         </div>\r\n\r\n         <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n         </p>\r\n\r\n      </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nexport default class About extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"seven columns\">\r\n            <img\r\n              className=\"profile-pic\"\r\n              src=\"images/profile-pic.jpg\"\r\n              alt=\"William Here\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"five columns main-col\">\r\n            <h2>About Me</h2>\r\n            <p>{resumeData.aboutme}</p>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"columns contact-details\">\r\n                <h2>Contact Details</h2>\r\n                <p className=\"address\">\r\n                  <span>{resumeData.name}</span>\r\n                  <br></br>\r\n                  <span>{resumeData.address}</span>\r\n                  <br></br>\r\n                  <span>\r\n                    <a href=\"mailto: {resumeData.email}\">{resumeData.email}</a>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n\r\n         <div className=\"row education\">\r\n\r\n            <div className=\"three columns header-col\">\r\n               <h1><span>Education</span></h1>\r\n            </div>\r\n\r\n            <div className=\"nine columns main-col\">\r\n              {\r\n                resumeData.education && resumeData.education.map((item)=>{\r\n                  return(\r\n                    <div className=\"row item\">\r\n                       <div className=\"twelve columns\">\r\n                          <h3>{item.UniversityName}</h3>\r\n                          <p className=\"info\">\r\n                          {item.specialization}\r\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\r\n                          <p>\r\n                          {item.Achievements[0]} <br></br>\r\n                          {item.Achievements[1]} <br></br>\r\n                          {item.Achievements[2]}\r\n                          </p>\r\n                       </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n         </div>\r\n        <div className=\"row work\">\r\n            <div className=\"three columns header-col\">\r\n               <h1><span>Work</span></h1>\r\n            </div>\r\n\r\n            <div className=\"nine columns main-col\">\r\n              {\r\n                resumeData.work && resumeData.work.map((item) => {\r\n                  return(\r\n                    <div className=\"row item\">\r\n                       <div className=\"twelve columns\">\r\n                          <h3>{item.CompanyName}</h3>\r\n                          <p className=\"info\">\r\n                          {item.specialization}\r\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\r\n                          <p>\r\n                          {item.Achievements[0]} <br></br>\r\n                          {item.Achievements[1]} <br></br>\r\n                          {item.Achievements[2]}\r\n                          </p>\r\n                       </div>\r\n\r\n                    </div>\r\n\r\n                  )\r\n                })\r\n              }\r\n            </div> \r\n         </div>\r\n\r\n\r\n         <div className=\"row skill\">\r\n\r\n            <div className=\"three columns header-col\">\r\n               <h1><span>Skills</span></h1>\r\n            </div>\r\n\r\n            <div className=\"nine columns main-col\">\r\n\r\n               <p>\r\n               {resumeData.skillsDescription}\r\n               </p>\r\n\r\n   \t\t\t\t<div className=\"bars\">\r\n\r\n   \t\t\t\t   <ul className=\"skills\">\r\n                {\r\n                  resumeData.skills && resumeData.skills.map((item) => {\r\n                    return(\r\n                      <li>\r\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\r\n                      </span><em>{item.skillname}</em>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n\r\n   \t\t\t\t\t</ul>\r\n\r\n   \t\t\t\t</div>\r\n\r\n   \t\t\t</div>\r\n\r\n         </div>\r\n\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Porfolio extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"portfolio\">\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns collapsed\">\r\n          <h1>Check Out Some of My Projects</h1>\r\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\r\n          {\r\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\r\n              return(\r\n                <div className=\"columns portfolio-item\">\r\n                  <div className=\"item-wrap\">\r\n                    <a href=\"#modal-01\">\r\n                      <img src={`${item.imgurl}`} className=\"item-img\" alt=\"Not Available\"/>\r\n                      <div className=\"overlay\">\r\n                        <div className=\"portfolio-item-meta\">\r\n                          <h5>{item.name}</h5>\r\n                          <p>{item.description}</p>\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </section>\r\n        );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Testimonials extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"testimonials\">\r\n        <div className=\"text-container\">\r\n          <div className=\"row\">\r\n            <div className=\"two columns header-col\">\r\n              <h1><span>Client Testimonials</span></h1>\r\n            </div>\r\n            <div className=\"ten columns flex-container\">\r\n              <div className=\"flexslider\">\r\n                <ul className=\"slides\">\r\n                  {\r\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\r\n                      return(\r\n                        <li>\r\n                          <blockquote>\r\n                            <p>\r\n                            {item.description}\r\n                            </p>\r\n                            <cite>{item.name}</cite>\r\n                          </blockquote>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div> {/* div.flexslider ends */}\r\n            </div> {/* div.flex-container ends */}\r\n          </div> {/* row ends */}\r\n        </div>  {/* text-container ends */}\r\n      </section>\r\n        );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class ContactUs extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"contact\">\r\n          <div className=\"row section-head\">\r\n            <div className=\"ten columns\">\r\n              <p className=\"lead\">\r\n              Feel free to contact me for any work or suggestions below\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <aside className=\"eigth columns footer-widgets\">\r\n              <div className=\"widget\">\r\n                <h4>Linkedin :\r\n                  <a href={resumeData.linkedinId}> {resumeData.linkedinId}</a>\r\n                  \r\n                </h4>\r\n              </div>\r\n            </aside>\r\n          </div>\r\n        </section>\r\n        );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer>\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <ul className=\"social-links\">\r\n            {\r\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\r\n                return(\r\n                  <li>\r\n                    <a href={item.url}>\r\n                    <i className={item.className} />\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          \r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\r\n      </div>\r\n    </footer>\r\n    );\r\n  }\r\n}","let resumeData = {\r\n  imagebaseurl: \"https://Chok-Ketzamtzib.github.io/\",\r\n  name: \"William Wakefield\",\r\n  role:\r\n    \"Applied Mathematics and Computer Science Student at Kettering University\",\r\n  linkedinId: \"https://linkedin.com/in/william-j-wakefield\",\r\n  skypeid: \"wakeforest.ww\",\r\n  roleDescription:\r\n    \"I like pursuing undergraduate research in Chaos Mathematics and autonomous vehicles. While my passion lies in mathematics and software development, I volunteer and mentor in FIRST Robotics to give back to our community. I am always looking to nurture new relationships, so feel free to reach out! \",\r\n  socialLinks: [\r\n    {\r\n      name: \"linkedin\",\r\n      url: \"https://www.linkedin.com/in/william-j-wakefield\",\r\n      className: \"fa fa-linkedin\"\r\n    },\r\n    {\r\n      name: \"github\",\r\n      url: \"http://github.com/chok-ketzamtzib\",\r\n      className: \"fa fa-github\"\r\n    },\r\n    {\r\n      name: \"skype\",\r\n      url: \"http://twitter.com/Ajtziib_William\",\r\n      className: \"fa fa-twitter\"\r\n    }\r\n  ],\r\n  aboutme:\r\n    \"I am currently a sophomore student at Kettering University pursuing Applied Mathematics and Computer Science Dual-Degree. I am a self taught Full Stack  Developer, currently diving deeper into Machine Learning and Data Science. I believe that to be successful in life, one needs to be obsessive with their dreams and keep working towards them.\",\r\n  address: \"Jacksonville, FL\",\r\n  email: \"wakeforest.ww@gmail.com\",\r\n  education: [\r\n    {\r\n      UniversityName: \"Kettering University\",\r\n      specialization: \"Applied Mathematics & Computer Science\",\r\n      MonthOfPassing: \"Jul\",\r\n      YearOfPassing: \"2023\",\r\n      Achievements: [\r\n        \"- Won 1st place in Concept Design Report, implementing solutions to increase mobility of autonomous vehicles\",\r\n        \"- Hosted radio show for the Flint Community which helped bring a voice to local artists and the community in order to express their culture & music. Also informed public of weather & educational content.\",\r\n        \"- Created with Kettering's FIRST Alumni board tools and whiteboards sent to over 4000 teams worldwide helping students achieve better team management in the FIRST robotics program.\"\r\n      ]\r\n    }\r\n  ],\r\n  work: [\r\n    {\r\n      CompanyName: \"Florida Blue\",\r\n      specialization: \"Java Developer\",\r\n      MonthOfLeaving: \"Present\",\r\n      YearOfLeaving: \"\",\r\n      Achievements: [\r\n        \"- Assisted with the Event Bus Project, an Event Pipeline with an Avro serializer built-in Java which used Kafka to partition data from multiple domains, ensuring a better, secure, and real-time experience for clients\\n\",\r\n        \"- Built a Batch Application in Java to validate data transferring from Hadoop Database to MongoDB, ensuring quality assurance of clients’ Personal Health Information (PHI)\\n\",\r\n        \"- Created an XSLT program to convert XML to a user-friendly HTML & PDF to benefit doctors and patients viewing their health information\"\r\n      ]\r\n    },\r\n    {\r\n      CompanyName: \"Johnson & Johnson Vision\",\r\n      specialization: \"Quality Assurance/Robotics Engineer\",\r\n      MonthOfLeaving: \"July\",\r\n      YearOfLeaving: \"2018\",\r\n      Achievements: [\r\n        \"- Led a four-week robotics curriculum teaching a cohort of 13 younger interns\",\r\n        \"- Aided the engineering department in maintaining and improving processes within contact lens production lines\",\r\n        \"- Taught Mechanical Engineering & Design fundamentals to a cohort of 13 younger interns using Solidworks & robotics parts\",\r\n        \"- Taught Quality Assurance and emphasized safety in the workplace\",\r\n        \"- Participated in Toastmasters, Professional Public Speaking in Business Charter\"\r\n      ]\r\n    }\r\n  ],\r\n  skillsDescription: \"My Skills\",\r\n  skills: [\r\n    {\r\n      skillname: \"Java\"\r\n    },\r\n    {\r\n      skillname: \"MATLAB\"\r\n    },\r\n    {\r\n      skillname: \"R\"\r\n    },\r\n    {\r\n      skillname: \"Javascript\"\r\n    },\r\n    {\r\n      skillname: \"React.js\"\r\n    },\r\n    {\r\n      skillname: \"Python\"\r\n    },\r\n    {\r\n      skillname: \"CSS\"\r\n    },\r\n    {\r\n      skillname: \"MongoDB\"\r\n    }\r\n  ],\r\n  portfolio: [\r\n    {\r\n      name: \"Lane Line Detection\",\r\n      description:\r\n        \"Created a simple lane line detection program in Python using OpenCV and pandas.\",\r\n      imgurl: \"images/portfolio/autodrive_tunnel.jpeg\"\r\n    },\r\n    {\r\n      name: \"Fractal Art\",\r\n      description: \"Computer-generated Art using JWildFire Program.\",\r\n      imgurl: \"images/portfolio/Crimson_Rose.png\"\r\n    },\r\n    {\r\n      name: \"Tennis Database\",\r\n      description:\r\n        \"Java Project which implements Abstract Data Structures to manage Tennis Players' Scores and information.\",\r\n      imgurl: \"images/portfolio/tennis-ball.jpg\"\r\n    },\r\n    {\r\n      name: \"react-portfolio\",\r\n      description: \"This site =)\",\r\n      imgurl: \"images/portfolio/console.jpg\"\r\n    }\r\n  ],\r\n  testimonials: [\r\n    {\r\n      description: \"Your Recommendation Here =)\",\r\n      name: \"Your First Name and Last Name\"\r\n    },\r\n    {\r\n      description: \"Your Recommendation Here =)\",\r\n      name: \"Your First Name and Last Name\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default resumeData;\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Resume from './components/Resume';\r\nimport Portfolio from './components/Portfolio';\r\nimport Testimonials from  './components/Testimonials';\r\nimport ContactUs from './components/ContactUs';\r\nimport Footer from './components/Footer';\r\nimport resumeData from './resumeData';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header resumeData={resumeData}/>\r\n        <About resumeData={resumeData}/>\r\n        <Resume resumeData={resumeData}/>\r\n        <Portfolio resumeData={resumeData}/>\r\n        <Testimonials resumeData={resumeData}/>\r\n        <ContactUs resumeData={resumeData}/>\r\n        <Footer resumeData={resumeData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}